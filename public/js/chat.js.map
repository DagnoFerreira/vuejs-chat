{"version":3,"sources":["chat.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,CAAC,OAAD,EAAU,kBAAV,EAA8B,UAA9B,CAAP,EAAkD,YAAY;;AAE5D,MAAM,MAAM,QAAQ,OAAR,CAAZ;AAAA,MACE,SAAS,QAAQ,UAAR,CADX;AAAA,MAEE,KAAK,QAAQ,kBAAR,CAFP;;AAIA;AACA,MAAM,SAAS,IAAf;AACA,MAAI,YAAY,IAAhB;;AAEA,WAAS,UAAT,CAAqB,KAArB,EAA4B;AAC1B;AACA,WAAO,KAAP;AACA;AACD;;AAED;AACA,MAAI,OAAO;AACT,cAAU,EADD;AAET,WAAO,EAFE;AAGT,cAAU;AAHD,GAAX;;AAMA,WAAS,OAAT,CAAiB,QAAjB,EAA2B;AACzB,SAAK,KAAL,CAAW,IAAX,CAAgB,EAAE,kBAAF,EAAhB;AACD;;AAED,WAAS,UAAT,CAAoB,OAApB,EAA6B;AAC3B,SAAK,QAAL,CAAc,IAAd,CAAmB,OAAnB;AACD;;AAED,MAAI,MAAJ,CAAW,mBAAX,EAAgC,UAAC,KAAD,EAAW;AACzC,WAAO,OAAO,KAAP,EAAc,MAAd,CAAqB,QAArB,CAAP;AACD,GAFD;;AAIA,MAAI,MAAJ,CAAW,wBAAX,EAAqC,UAAC,cAAD,EAAiB,KAAjB,EAA2B;AAC9D,QAAI,kBAAkB,KAAK,QAAL,CAAc,QAAQ,CAAtB,CAAtB;AACA,QAAI,CAAC,eAAL,EAAsB,OAAO,IAAP;AACtB,WAAO,gBAAgB,QAAhB,KAA6B,eAAe,QAAnD;AACD,GAJD;;AAMA,MAAI,WAAW,SAAS,MAAT,CAAgB,KAAK,KAAL,CAAY,KAAK,MAAL,KAAgB,GAAjB,GAAwB,CAAnC,CAAhB,CAAf;;AAEA,MAAI,GAAJ,CAAQ;AACN,QAAI,OADE;AAEN,UAAM,IAFA;AAGN,aAAS;AACP,gBADO,wBACM;AACX,YAAI,WAAW,WAAW,KAAK,QAAhB,CAAf;AACA,YAAI,YAAY,SAAhB,EAA2B;AACzB,eAAK,QAAL,GAAgB,EAAhB;AACA,cAAI,UAAU;AACZ,8BADY;AAEZ,qBAAS,QAFG;AAGZ,kBAAM,KAAK,GAAL;AAHM,WAAd;AAKA,qBAAW,OAAX;AACA,iBAAO,IAAP,CAAY,wBAAZ,EAAsC,OAAtC;AACD;AACF;AAbM;AAHH,GAAR;;AAoBA;AACA,GAAC,YAAW;AACV,WAAO,IAAP,CAAY,0BAAZ,EAAwC,QAAxC;AACA,YAAQ,QAAR;AACD,GAHD;;AAKA,SAAO,EAAP,CAAU,0BAAV,EAAsC,UAAC,GAAD,EAAS;AAC7C,YAAQ,IAAI,QAAZ;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,wBAAV,EAAoC,UAAC,OAAD,EAAa;AAC/C,eAAW,OAAX;AACD,GAFD;AAID,CA7ED","file":"chat.js","sourcesContent":["'use strict';\n\ndefine(['vuejs', 'socket.io-client', 'momentjs'], function () {\n\n  const Vue = require('vuejs'),\n    moment = require('momentjs'),\n    io = require('socket.io-client');\n\n  // SocketIO setup\n  const socket = io();\n  var connected = true;\n\n  function cleanInput (input) {\n    // todo: make this work\n    return input;\n    //return $('<div/>').text(input).text();\n  }\n\n  // Vue\n  var data = {\n    messages: [],\n    users: [],\n    chatText: ''\n  };\n\n  function addUser(username) {\n    data.users.push({ username });\n  }\n\n  function addMessage(message) {\n    data.messages.push(message);\n  }\n\n  Vue.filter('formatMessageDate', (value) => {\n    return moment(value).format('h:mm A');\n  });\n\n  Vue.filter('isNotSubsequentMessage', (currentMessage, index) => {\n    let previousMessage = data.messages[index - 1];\n    if (!previousMessage) return true;\n    return previousMessage.username !== currentMessage.username;\n  });\n\n  let username = 'george'.concat(Math.floor((Math.random() * 100) + 1));\n\n  new Vue({\n    el: '#chat',\n    data: data,\n    methods: {\n      submitChat() {\n        var chatText = cleanInput(this.chatText);\n        if (chatText && connected) {\n          this.chatText = '';\n          let message = {\n            username,\n            message: chatText,\n            date: Date.now()\n          };\n          addMessage(message);\n          socket.emit('chatTextClientToServer', message);\n        }\n      }\n    }\n  });\n\n  // Add this user on page load\n  (function() {\n    socket.emit('userJoinedClientToServer', username);\n    addUser(username);\n  })();\n\n  socket.on('userJoinedServerToClient', (obj) => {\n    addUser(obj.username);\n  });\n\n  socket.on('chatTextServerToClient', (message) => {\n    addMessage(message);\n  });\n\n});\n"],"sourceRoot":"/source/"}